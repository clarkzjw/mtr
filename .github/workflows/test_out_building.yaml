name: test_out_building

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

defaults:
  run:
    shell: bash

jobs:
  build_debs_on_ubuntu:
    name: Test ${{matrix.os}}.${{matrix.compiler}} building of deb-package
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [ubuntu-latest]
        compiler: [gcc, clang]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: dev
      - name: Install mandatory packages for building
        run: sudo apt install -y devscripts debhelper libidn2-dev
      - name: Create deb package on ${{matrix.os}} with ${{matrix.compiler}}
        env:
          CC: ${{matrix.compiler}}
          DEB_CFLAGS_STRIP: -ffat-lto-objects
          DEB_LDFLAGS_STRIP: -ffat-lto-objects
        run: ./build-deb.sh

  build_exec_on_macos:
    name: Test ${{matrix.os}}.${{matrix.compiler}} building of deb-package
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [macos-latest]
        compiler: [gcc, clang]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: dev
      - name: Install mandatory packages for building
#gc#        run: brew install automake pango xcb-util-keysyms
        run: brew install automake
      - name: Create executable on ${{matrix.os}} with ${{matrix.compiler}}
        env:
          CC: ${{matrix.compiler}}
#gc#        run: ./bootstrap.sh && ./configure --with-libidn --with-graphcairo-xcb && make
        run: ./bootstrap.sh && ./configure --with-libidn && make

